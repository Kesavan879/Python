class MinStack(object):

    def __init__(self):
        self.stack = []
        self.minElem = []
        

    def push(self, val):
        """
        :type val: int
        :rtype: None
        """
        self.stack.append(val)
        if len(self.minElem) > 0:
            if val <= self.minElem[-1]:    
                self.minElem.append(val)
        else:
            self.minElem.append(val)
        return None
        

    def pop(self):
        """
        :rtype: None
        """
        if self.stack.pop() == self.minElem[-1]:
            self.minElem.pop()
        return None

    def top(self):
        """
        :rtype: int
        """
        return self.stack[-1]
        

    def getMin(self):
        """
        :rtype: int
        """
        return self.minElem[-1]
        

# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()
